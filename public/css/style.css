@import url(https://fonts.googleapis.com/css?family=Raleway:300,400,600);

@-webkit-keyframes slideInRightFadeIn {
  from {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
  }
}

@keyframes slideInRightFadeIn {
  from {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
  }
}

.slideInRightFadeIn {
  -webkit-animation-name: slideInRightFadeIn;
          animation-name: slideInRightFadeIn;
}

@-webkit-keyframes slideOutRightFadeOut {
  from {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
  }

  to {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0);
  }
}

@keyframes slideOutRightFadeOut {
  from {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
  }

  to {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0);
  }
}

.slideOutRightFadeOut {
  -webkit-animation-name: slideOutRightFadeOut;
          animation-name: slideOutRightFadeOut;
}

body {
  overflow-x: hidden;
}

.view-feed {
  position: relative;
}

.toggle-switch {
  position: absolute;
  display: inline-block;
  width: 40px;
  height: 23px;
  /* Hide default HTML checkbox */
}

.toggle-switch input {
  display: none;
}

.toggle-switch input:checked + .toggle-switch-track {
  background-color: #f82764;
}

.toggle-switch input:focus + .toggle-switch-track {
  box-shadow: 0 0 1px #2196F3;
}

.toggle-switch input:checked + .toggle-switch-track:before {
  left: calc(100% - 19px);
}

/* The toggle-switch-track */

.toggle-switch-track {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #f82764;
  transition: .4s;
}

.toggle-switch-track:before {
  position: absolute;
  content: "";
  height: 15px;
  width: 15px;
  left: 4px;
  bottom: 4px;
  background-color: #b31c49;
  transition: .4s;
}

/* Rounded toggle-switch-tracks */

.toggle-switch-track.round {
  border-radius: 34px;
}

.toggle-switch-track.round:before {
  border-radius: 50%;
}

body {
  font-family: "Montserrat", sans-serif;
}

.top-bar,
.top-bar ul {
  background-color: #3d89f9;
  color: #ffffff;
}

.top-bar h1,
.top-bar ul h1 {
  font-size: 1.7rem;
  margin: 0;
  font-weight: bold;
  text-transform: lowercase;
}

.top-bar a,
.top-bar ul a {
  color: #ffffff !important;
}

h2 {
  color: #3d89f9;
  text-align: center;
}

h2 span {
  font-weight: bold;
}

textarea {
  resize: none;
}

.pad-10 {
  padding: 10px;
}

.twitter-options {
  background-color: #b31c49;
}

.icon-user span {
  text-decoration: underline;
}

.icon-user span:hover {
  text-decoration: none;
  cursor: pointer;
}

.twitter-container {
  background-color: #2d67b8;
  color: #ffffff;
}

.twitter-container a {
  color: rgba(255, 255, 255, 0.6);
  transition: color .25s ease-out,color .25s ease-out;
}

.twitter-container a:hover {
  color: #ffffff;
}

.twitter-container .media-object {
  margin-bottom: 25px;
  margin-left: 10px;
}

.tweet-block p {
  margin: 0;
}

.btn-tweet {
  margin-left: 10px;
}

.overlay:before {
  content: '';
  height: 100%;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1;
  background-color: #000000;
  opacity: 0.8;
}

.tweet-modal {
  position: fixed;
  width: 320px;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  z-index: 1;
  width: 500px !important;
}

.tweet-modal .callout {
  padding: 80px 20px 80px 20px;
  background-color: #a23850;
  color: #ffffff;
}

.tweet-modal .close-button {
  color: #ffffff;
}

.tweet-modal label {
  color: #ffffff;
}

.tweet-media {
  width: 100%;
  margin-top: 20px;
}

/* Small only */

@media screen and (max-width: 39.9375em) {
  .twitter-container,
  .twitter-options {
    display: none;
  }
}

/* Medium and up */

@media screen and (min-width: 40em) {
  .twitter-container:before {
    content: '';
    position: fixed;
    background-color: #2d67b8;
    height: 100vh;
    width: 100%;
    z-index: -1;
    top: 0;
  }

  .twitter-options:before {
    content: '';
    position: absolute;
    background-color: #c11f4e;
    height: 100%;
    width: 100%;
  }
}

/* Medium only */

/* Large and up */

/* Large only */

.section-filter {
  background-color: #f82764;
  color: #ffffff;
  margin-bottom: 25px;
  position: relative;
  overflow: hidden;
  max-height: 44px;
  transition: max-height 0.6s ease-out;
}

.section-filter.menu-open {
  max-height: 900px;
  transition: max-height 0.6s ease-in;
}

.section-filter label {
  color: #ffffff;
}

span.icon-down-open-big,
span.icon-up-open-big {
  float: right;
}

span.icon-down-open-big:hover,
span.icon-up-open-big:hover {
  cursor: pointer;
  color: #b31c49;
}

.options-menu {
  padding: 10px;
  position: relative;
}

.options-wrap {
  padding-left: 10px;
  position: relative;
}

.options-wrap span a {
  color: #ffffff;
}

.save {
  background-color: #b31c49;
  padding: 5px;
  text-align: center;
  position: relative;
  z-index: 10;
}

.save:hover {
  cursor: pointer;
  opacity: 0.8;
}

.categories,
.languages,
.news-sources {
  background-color: #c11f4e;
  border-radius: 10px;
  padding: 20px;
  margin-bottom: 30px;
}

.category,
.language {
  text-transform: capitalize;
}

.news-sources {
  height: 292px;
  overflow-y: scroll;
}

label > [type=checkbox] {
  float: right;
}

.filter_menu-enter {
  transition: all .25s;
  display: block;
}

.filter_menu-enter.filter_menu-active {
  -webkit-transform: translateY(0);
          transform: translateY(0);
}

.filter_menu-leave {
  transition: all .25s;
  display: none;
}

.filter_menu-leave.filter_menu-active {
  -webkit-transform: translateY(-100%);
          transform: translateY(-100%);
}

/* Small only */

@media screen and (max-width: 39.9375em) {
  .section-filter {
    margin-bottom: 0;
  }

  .options-wrap {
    display: none;
  }
}

/* Medium and up */

/* Medium only */

/* Large and up */

/* Large only */

.source-category {
  text-transform: capitalize;
}

.article-image {
  width: 100%;
  height: 300px;
  -o-object-fit: cover;
     object-fit: cover;
}

.load-more {
  margin-top: 20px;
}

.card {
  color: white;
  position: relative;
  margin: 0;
  border: none;
}

.card .card-section.onhover {
  display: none;
}

.card .card-section {
  position: absolute;
  bottom: 0;
}

.card .card-section .source {
  text-decoration: underline;
}

.card .card-section .article-btn {
  background-color: #f82764;
}

.card .card-section .article-btn:hover {
  background-color: #af3d57;
}

.card:before {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  background-image: linear-gradient(to bottom, transparent 0%, rgba(0, 0, 0, 0.8) 76%);
}

.card:hover {
  cursor: pointer;
}

.card:hover:before {
  background-image: linear-gradient(to bottom, transparent 0%, rgba(0, 0, 0, 0.5) 0%);
}

.card:hover .card-section.onhover {
  display: block;
  position: absolute;
  top: 0;
  width: 100%;
}

.card:hover .card-section.onhover > * {
  margin: 10px;
}

.card:hover .card-section.offhover {
  display: none;
}

.newsfeed > * {
  transition: width 0.5s linear;
}

.news-leave {
  visibility: hidden;
  width: 0;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */